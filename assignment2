#this is the homework of week3 of R course in John Hopkins
#the goal is to cache the inverse of matrix

#first
#set and get a list of matrix and inversed-matrix
makeCacheMatrix  <- function(x = matrix()) {
        m <- NULL
        set <- function(y) {
                x <<- y
                m <<- NULL
        }
        get <- function() x
        setinverse <- function(inverse) m <<- inverse
        getinverse <- function() m
        list(set = set, get = get,
             setinverse = setinverse,
             getinverse = getinverse)
}

#second
#retrieve or calculate the reversed-matrix
cacheSolve <- function(x, ...) {
        m <- x$getinverse()
        if(!is.null(m)) {
                message("getting cached data")
                return(m)
        }
        data <- x$get()
        m<-solve(data,...)
        x$setinverse(m)
        m
}
